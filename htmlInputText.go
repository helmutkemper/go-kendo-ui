package telerik

import (
	"bytes"
	"reflect"
)

//@see https://json-schema.org/
//@see https://tools.ietf.org/html/draft-handrews-json-schema-validation-01
//@see https://stackoverflow.com/questions/38717933/jsonschema-attribute-conditionally-required
//@see http://json-schema.org/draft-07/json-schema-release-notes.html
//@see https://cswr.github.io/JsonSchema/spec/generic_keywords/

// <input> elements of type "text" create basic single-line text fields.
//
// <input type="text">
//
// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text
type HtmlInputText struct {
	Apagar string `htmlAttr:"apagar" jsonSchema_complex:"{\"animation\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation\\n\\nConfigures the opening and closing animations of the suggestion popup. Setting the **animation** option to **false** will disable the opening and closing animations. As a result the suggestion popup will open and close instantly.\\n\\n**animation:true** is not a valid configuration.\\n\\nType: Boolean, Object\\n\\n\\n\\nExample - disable open and close animations\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  animation: false\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - configure the animation\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  animation: {\\n   close: {\\n     effects: 'fadeOut zoom:out',\\n     duration: 300\\n   },\\n   open: {\\n     effects: 'fadeIn zoom:in',\\n     duration: 300\\n   }\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{\"close\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.close\\n\\nThe animation played when the suggestion popup is closed.\\n\\nType: Object\\n\\n\\n\\nExample - configure the close animation\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  animation: {\\n   close: {\\n     effects: 'zoom:out',\\n     duration: 300\\n   }\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{\"duration\":{\"default\":100,\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.close.duration\\n\\n\\n\\nType: Number (default: 100)\\n\\n\\n\\n\",\"type\":\"number\"},\"effects\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.close.effects\\n\\n\\n\\nType: String\\n\\n\\n\\n\",\"type\":\"string\"}},\"type\":\"object\"},\"open\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.open\\n\\nThe animation played when the suggestion popup is opened.\\n\\nType: Object\\n\\n\\n\\nExample - configure the open animation\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  animation: {\\n   open: {\\n     effects: 'zoom:in',\\n     duration: 300\\n   }\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{\"duration\":{\"default\":200,\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.open.duration\\n\\n\\n\\nType: Number (default: 200)\\n\\n\\n\\n\",\"type\":\"number\"},\"effects\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/animation.open.effects\\n\\n\\n\\nType: String\\n\\n\\n\\n\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"autoWidth\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/autoWidth\\n\\nIf set to **true**, the widget automatically adjusts the width of the popup element and does not wrap up the item label.\\n\\n\\u003cblockquote\\u003e\\nNote: Virtualized list doesn't support the auto-width functionality.\\n\\u003c/blockquote\\u003e\\n\\nType: Boolean\\n\\n\\n\\nExample - enable autoWidth\\n\\n\\u003cinput id='autocomplete' style='width: 100px;' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  autoWidth: true,\\n  dataSource: {\\n    data: ['Short item', 'An item with really, really long text']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"clearButton\":{\"default\":\"true\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/clearButton\\n\\nUnless this options is set to **false**, a button will appear when hovering the widget. Clicking that button will reset the widget's value and will trigger the change event.\\n\\nType: Boolean (default: true)\\n\\n\\n\\nExample - disable the clear button\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n    clearButton: false\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"dataSource\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/dataSource\\n\\nThe data source of the widget which is used to display suggestions for the current value. Can be a JavaScript object which represents a valid data source configuration, a JavaScript array or an existing \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/data/datasource\\\\\\\"\\u003ekendo.data.DataSource\\u003c/a\\u003e\\ninstance.\\n\\nIf the **dataSource** option is set to a JavaScript object or array the widget will initialize a new \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/data/datasource\\\\\\\"\\u003ekendo.data.DataSource\\u003c/a\\u003e instance using that value as data source configuration.\\n\\nIf the **dataSource** option is an existing \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/data/datasource\\\\\\\"\\u003ekendo.data.DataSource\\u003c/a\\u003e instance the widget will use that instance and will not initialize a new one.\\n\\nType: Object, Array, kendo.data.DataSource\\n\\n\\n\\nExample - set dataSource as a JavaScript object\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - set dataSource as a JavaScript array\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\nvar data = ['One', 'Two'];\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: data\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - set dataSource as an existing kendo.data.DataSource instance\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\nvar dataSource = new kendo.data.DataSource({\\n  transport: {\\n    read: {\\n      url: 'https://demos.telerik.com/kendo-ui/service/products',\\n      dataType: 'jsonp'\\n    }\\n  }\\n});\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: dataSource,\\n  dataTextField: 'ProductName'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"dataTextField\":{\"default\":\"null\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/dataTextField\\n\\nThe field of the data item used when searching for suggestions.  This is the text that will be displayed in the list of matched results.\\n\\nType: String (default: null)\\n\\n\\n\\nExample - set the dataTextField\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\nvar data = [\\n  { id: 1, name: 'Apples' },\\n  { id: 2, name: 'Oranges' }\\n];\\n$('#autocomplete').kendoAutoComplete({\\n  dataTextField: 'name', // The widget is bound to the 'name' field\\n  dataSource: data\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"string\"},\"delay\":{\"default\":200,\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/delay\\n\\nThe delay in milliseconds between a keystroke and when the widget displays the suggestion popup.\\n\\nType: Number (default: 200)\\n\\n\\n\\nExample - set the delay\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  delay: 500\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"number\"},\"enable\":{\"default\":\"true\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/enable\\n\\nIf set to **false** the widget will be disabled and will not allow user input. The widget is enabled by default and allows user input.\\n\\nType: Boolean (default: true)\\n\\n\\n\\nExample - disable the widget\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  enable: false\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"enforceMinLength\":{\"default\":\"false\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/enforceMinLength\\n\\nIf set to **true** the widget will not show all items when the text of the search input cleared. By default the widget shows all items when the text of the search input is cleared. Works in conjunction with \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/ui/autocomplete#configuration-minLength\\\\\\\"\\u003eminLength\\u003c/a\\u003e.\\n\\nType: Boolean (default: false)\\n\\n\\n\\nExample - enforce minLength\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n    dataTextField: 'ProductName',\\n    filter: 'contains',\\n    minLength: 3,\\n    enforceMinLength: true,\\n    autoBind: false,\\n    dataSource: {\\n        type: 'odata',\\n        serverFiltering: true,\\n        transport: {\\n            read: '//demos.telerik.com/kendo-ui/service/Northwind.svc/Products'\\n        }\\n    }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"filter\":{\"default\":\"\\\"startswith\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/filter\\n\\nThe filtering method used to determine the suggestions for the current value. The default filter is \\\\\\\"startswith\\\\\\\" -\\nall data items which begin with the current widget value are displayed in the suggestion popup. The supported **filter** values are **startswith**, **endswith** and **contains**.\\n\\nType: String (default: \\\\\\\"startswith\\\\\\\")\\n\\n\\n\\nExample - set the filter\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  filter: 'contains',\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"string\"},\"fixedGroupTemplate\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/fixedGroupTemplate\\n\\n\\n\\nType: String, Function\\n\\n\\n\\n\",\"properties\":{}},\"footerTemplate\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/footerTemplate\\n\\nThe \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/kendo/methods/template\\\\\\\"\\u003etemplate\\u003c/a\\u003e used to render the footer template. The footer template receives the widget itself as a part of the data argument. Use the widget fields directly in the template.\\n\\nType: String, Function\\n\\n\\n\\nExample - specify footerTemplate as a string\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  footerTemplate: 'Total \\u003cstrong\\u003e#: instance.dataSource.total() #\\u003c/strong\\u003e items found'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"groupTemplate\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/groupTemplate\\n\\n\\n\\nType: String, Function\\n\\n\\n\\n\",\"properties\":{}},\"headerTemplate\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/headerTemplate\\n\\nSpecifies a static HTML content, which will be rendered as a header of the popup element.\\n\\n\\u003cblockquote\\u003e\\nImportant The header content should be wrapped with a HTML tag if it contains more than one element. This is applicable also when header content is just a string/text.\\n\\nImportant Widget does not pass a model data to the header template. Use this option only with static HTML.\\n\\u003c/blockquote\\u003e\\n\\nType: String, Function\\n\\n\\n\\nExample - specify headerTemplate as a string\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  headerTemplate: '\\u003cdiv\\u003e\\u003ch2\\u003eFruits\\u003c/h2\\u003e\\u003c/div\\u003e'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"height\":{\"default\":200,\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/height\\n\\nThe height of the suggestion popup in pixels. The default value is 200 pixels.\\n\\nType: Number (default: 200)\\n\\n\\n\\nExample - set the height\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  height: 100,\\n  dataSource: {\\n    data: ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"number\"},\"highlightFirst\":{\"default\":\"true\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/highlightFirst\\n\\nIf set to **true** the first suggestion will be automatically highlighted.\\n\\nType: Boolean (default: true)\\n\\n\\n\\nExample - set highlightFirst\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  highlightFirst: true,\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"ignoreCase\":{\"default\":\"true\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/ignoreCase\\n\\nIf set to **false** case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default.\\n\\nType: Boolean (default: true)\\n\\n\\n\\nExample - disable case-insensitive suggestions\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  ignoreCase: false,\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"minLength\":{\"default\":1,\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/minLength\\n\\nThe minimum number of characters the user must type before a search is performed. Set to higher value than **1** if the search could match a lot of items.\\n\\n\\u003cblockquote\\u003e\\nWidget will initiate a request when input value is cleared. If you would like to prevent this behavior please check the \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/ui/autocomplete/events/filtering\\\\\\\"\\u003efiltering\\u003c/a\\u003e event for more details.\\n\\u003c/blockquote\\u003e\\n\\nType: Number (default: 1)\\n\\n\\n\\nExample - set minLength\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  minLength: 3,\\n  placeholder: 'Type 'one'',\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"number\"},\"noDataTemplate\":{\"default\":\"\\\"NO DATA FOUND.\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/noDataTemplate\\n\\nThe \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/kendo/methods/template\\\\\\\"\\u003etemplate\\u003c/a\\u003e used to render the \\\\\\\"no data\\\\\\\" template, which will be displayed if no results are found or the underlying data source is empty.\\nThe noData template receives the widget itself as a part of the data argument. The template will be evaluated on every widget data bound.\\n\\n\\u003cblockquote\\u003e\\nImportant The popup will open when 'noDataTemplate' is defined\\n\\u003c/blockquote\\u003e\\n\\nType: String, Function (default: \\\\\\\"NO DATA FOUND.\\\\\\\")\\n\\n\\n\\nExample - specify noDataTemplate as a string\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  noDataTemplate: 'No Data!'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"placeholder\":{\"default\":\"\\\"\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/placeholder\\n\\nThe hint displayed by the widget when it is empty. Not set by default.\\n\\nType: String (default: \\\\\\\"\\\\\\\")\\n\\n\\n\\nExample - specify placeholder\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  placeholder: 'Enter value ...'\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - use the placeholder HTML attribute\\n\\n\\u003cinput id='autocomplete' placeholder='Enter value...' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete();\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"string\"},\"popup\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/popup\\n\\nThe options that will be used for the popup initialization. For more details about the available options\\nrefer to \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/ui/popup\\\\\\\"\\u003ePopup\\u003c/a\\u003e documentation.\\n\\nType: Object\\n\\n\\n\\nExample - append the popup to a specific element\\n\\n\\u003cdiv id='container'\\u003e\\n    \\u003cinput id='autocomplete' /\\u003e\\n\\u003c/div\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  popup: {\\n    appendTo: $('#container')\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"object\"},\"separator\":{\"default\":\"\\\"\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/separator\\n\\nThe character used to separate multiple values. Empty by default.\\n\\n\\u003cblockquote\\u003e\\nAs of Q3 2016 the Autocomplete widget supports multiple separators listed in an array. All separators will be replaced with the first array item, which acts as a default separator.\\n\\nUsing the separator option will still bind the primitive stringe value of the input. In case you need to bind multiple data items, you can consider the \\u003ca href=\\\\\\\"/kendo-ui/controls/editors/multiselect/overview\\\\\\\"\\u003eMultiSelect widget\\u003c/a\\u003e.\\n\\u003c/blockquote\\u003e\\n\\nType: String, Array (default: \\\\\\\"\\\\\\\")\\n\\n\\n\\nExample - set separator to allow multiple values\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  separator: ', ',\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - set multiple separators\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  separator: [', ', '; '],\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"suggest\":{\"default\":\"false\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/suggest\\n\\nIf set to **true** the widget will automatically use the first suggestion as its value.\\n\\nType: Boolean (default: false)\\n\\n\\n\\nExample - enable automatic suggestion\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  suggest: true,\\n  dataSource: {\\n    data: ['One', 'Two']\\n  }\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"template\":{\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/template\\n\\nThe \\u003ca href=\\\\\\\"/kendo-ui/api/javascript/kendo/methods/template\\\\\\\"\\u003etemplate\\u003c/a\\u003e used to render the suggestions. By default the widget displays only the text of the suggestion (configured via **dataTextField**).\\n\\nType: String, Function\\n\\n\\n\\nExample - specify template as a function\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript id='template' type='text/x-kendo-template'\\u003e\\n  \\u003cspan\\u003e\\n    \\u003cimg src='/img/#: id #.png' alt='#: name #' /\\u003e\\n    #: name #\\n  \\u003c/span\\u003e\\n\\u003c/script\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  template: kendo.template($('#template').html())\\n});\\n\\u003c/script\\u003e\\n\\n\\nExample - specify template as a string\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  template: '\\u003cspan\\u003e\\u003cimg src='/img/#: id #.png' alt='#: name #' /\\u003e#: name #\\u003c/span\\u003e'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{}},\"value\":{\"default\":\"\\\"\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/value\\n\\nThe value of the widget.\\n\\nType: String (default: \\\\\\\"\\\\\\\")\\n\\n\\n\\nExample - specify value of the widget\\n\\n\\u003cinput id='autocomplete' /\\u003e\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  dataSource: [\\n    { id: 1, name: 'Apples' },\\n    { id: 2, name: 'Oranges' }\\n  ],\\n  dataTextField: 'name',\\n  value: 'Oranges'\\n});\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"string\"},\"valuePrimitive\":{\"default\":\"false\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/valuePrimitive\\n\\nSpecifies the \\u003ca href=\\\\\\\"/kendo-ui/framework/mvvm/bindings/value\\\\\\\"\\u003evalue binding\\u003c/a\\u003e behavior for the widget when the initial model value is null. If set to true, the View-Model field will be updated with the selected item text field. If set to false, the View-Model field will be updated with the selected item.\\n\\nType: Boolean (default: false)\\n\\n\\n\\nExample - specify that the View-Model field should be updated with the selected item text\\n\\n\\u003cinput id='autocomplete' data-bind='value: productName, source: products' /\\u003e\\n\\n\\u003cscript\\u003e\\n$('#autocomplete').kendoAutoComplete({\\n  valuePrimitive: true,\\n  dataTextField: 'name'\\n});\\nvar viewModel = kendo.observable({\\n  productName: null,\\n  products: [\\n    { id: 1, name: 'Coffee' },\\n    { id: 2, name: 'Tea' },\\n    { id: 3, name: 'Juice' }\\n  ]\\n});\\n\\nkendo.bind($('#autocomplete'), viewModel);\\n\\u003c/script\\u003e\\n\",\"properties\":{},\"type\":\"boolean\"},\"virtual\":{\"default\":\"false\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/virtual\\n\\nEnables the virtualization feature of the widget. The configuration can be set on an object, which contains two properties - **itemHeight** and **valueMapper**.\\n\\nFor detailed information, refer to the \\u003ca href=\\\\\\\"/kendo-ui/controls/editors/combobox/virtualization\\\\\\\"\\u003earticle on virtualization\\u003c/a\\u003e.\\n\\nType: Boolean, Object (default: false)\\n\\n\\n\\nExample - AutoComplete with a virtualized list\\n\\n\\u003cinput id='orders' style='width: 400px' /\\u003e\\n\\u003cscript\\u003e\\n    $(document).ready(function() {\\n        $('#orders').kendoAutoComplete({\\n            template: '#= OrderID # | For: #= ShipName #, #= ShipCountry #',\\n            dataTextField: 'ShipName',\\n            virtual: true,\\n            height: 520,\\n            dataSource: {\\n                type: 'odata',\\n                transport: {\\n                    read: 'https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders'\\n                },\\n                schema: {\\n                    model: {\\n                        fields: {\\n                            OrderID: { type: 'number' },\\n                            Freight: { type: 'number' },\\n                            ShipName: { type: 'string' },\\n                            OrderDate: { type: 'date' },\\n                            ShipCity: { type: 'string' }\\n                        }\\n                    }\\n                },\\n                pageSize: 80,\\n                serverPaging: true,\\n                serverFiltering: true\\n            }\\n        });\\n    });\\n\\u003c/script\\u003e\\n\\n\\nExample - AutoComplete widget with a declarative virtualization config\\n\\n\\u003cdiv class='demo-section k-header'\\u003e\\n    \\u003ch4\\u003eSearch for shipping name\\u003c/h4\\u003e\\n    \\u003cinput id='orders' style='width: 400px'\\n           data-role='autocomplete'\\n           data-bind='value: order, source: source'\\n           data-text-field='ShipName'\\n           data-virtual='{itemHeight:26,valueMapper:orderValueMapper}'\\n           /\\u003e\\n\\u003c/div\\u003e\\n\\n\\u003cscript\\u003e\\n    $(document).ready(function() {\\n        var model = kendo.observable({\\n          order: 'Hanari Carnes',\\n          source: new kendo.data.DataSource({\\n            type: 'odata',\\n            transport: {\\n              read: 'https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders'\\n            },\\n            schema: {\\n              model: {\\n                fields: {\\n                  OrderID: { type: 'number' },\\n                  Freight: { type: 'number' },\\n                  ShipName: { type: 'string' },\\n                  OrderDate: { type: 'date' },\\n                  ShipCity: { type: 'string' }\\n                }\\n              }\\n            },\\n            pageSize: 80,\\n            serverPaging: true,\\n            serverFiltering: true\\n          })\\n        });\\n\\n        kendo.bind($(document.body), model);\\n    });\\n\\n    function orderValueMapper(options) {\\n        $.ajax({\\n          url: 'https://demos.telerik.com/kendo-ui/service/Orders/ValueMapper',\\n          type: 'GET',\\n          dataType: 'jsonp',\\n          data: convertValues(options.value),\\n          success: function (data) {\\n            options.success(data);\\n          }\\n        })\\n    }\\n\\n    function convertValues(value) {\\n        var data = {};\\n\\n        value = $.isArray(value) ? value : [value];\\n\\n        for (var idx = 0; idx \\u003c value.length; idx++) {\\n            data['values[' + idx + ']'] = value[idx];\\n        }\\n\\n        return data;\\n    }\\n\\u003c/script\\u003e\\n\",\"properties\":{\"itemHeight\":{\"default\":\"null\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/virtual.itemHeight\\n\\nSpecifies the height of the virtual item. All items in the virtualized list must have the same height.\\nIf the developer does not specify one, the framework will automatically set **itemHeight** based on the current theme and font size.\\n\\nType: Number (default: null)\\n\\n\\n\\nExample - AutoComplete with a virtualized list\\n\\n\\u003cinput id='orders' style='width: 400px' /\\u003e\\n\\u003cscript\\u003e\\n    $(document).ready(function() {\\n        $('#orders').kendoAutoComplete({\\n            template: '#= OrderID # | For: #= ShipName #, #= ShipCountry #',\\n            dataTextField: 'ShipName',\\n            virtual: {\\n                itemHeight: 26\\n            },\\n            height: 520,\\n            dataSource: {\\n                type: 'odata',\\n                transport: {\\n                    read: 'https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders'\\n                },\\n                schema: {\\n                    model: {\\n                        fields: {\\n                            OrderID: { type: 'number' },\\n                            Freight: { type: 'number' },\\n                            ShipName: { type: 'string' },\\n                            OrderDate: { type: 'date' },\\n                            ShipCity: { type: 'string' }\\n                        }\\n                    }\\n                },\\n                pageSize: 80,\\n                serverPaging: true,\\n                serverFiltering: true\\n            }\\n        });\\n    });\\n\\u003c/script\\u003e\\n\",\"type\":\"number\"},\"mapValueTo\":{\"default\":\"\\\"index\\\"\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/virtual.mapValueTo\\n\\n\\n\\nType: String (default: \\\\\\\"index\\\\\\\")\\n\\n\\n\\n\",\"type\":\"string\"},\"valueMapper\":{\"default\":\"null\",\"description\":\"https://docs.telerik.com/kendo-ui/api/javascript/ui/virtual.valueMapper\\n\\n\\u003cblockquote\\u003e\\nImportant\\nAs of the Kendo UI R3 2016 release, the implementation of the **valueMapper** function is not necessary.\\n\\u003c/blockquote\\u003e\\n\\nType: Function (default: null)\\n\\n\\n\\nExample - AutoComplete with a virtualized list\\n\\n// the example is relevant to Kendo UI versions prior to 2016.3.914\\n\\u003cinput id='orders' style='width: 400px' /\\u003e\\n\\u003cscript\\u003e\\n    $(document).ready(function() {\\n        $('#orders').kendoAutoComplete({\\n            template: '\\u003cspan class='order-id'\\u003e#= OrderID #\\u003c/span\\u003e #= ShipName #, #= ShipCountry #',\\n            dataTextField: 'ShipName',\\n            virtual: {\\n                itemHeight: 26,\\n                valueMapper: function(options) {\\n                    $.ajax({\\n                        url: 'https://demos.telerik.com/kendo-ui/service/Orders/ValueMapper',\\n                        type: 'GET',\\n                        dataType: 'jsonp',\\n                        data: convertValues(options.value),\\n                        success: function (data) {\\n                            //the **data** is either index or array of indices.\\n                            //Example:\\n                            // 'Ernst Handel' -\\u003e 10 (index in the Orders collection)\\n                            // ['Ernst Handel', 'Que Delícia'] -\\u003e [10, 14] (indices in the Orders collection)\\n\\n                            options.success(data);\\n                        }\\n                    })\\n                }\\n            },\\n            height: 520,\\n            dataSource: {\\n                type: 'odata',\\n                transport: {\\n                    read: 'https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders'\\n                },\\n                pageSize: 80,\\n                serverPaging: true,\\n                serverFiltering: true\\n            }\\n        });\\n    });\\n\\n    function convertValues(value) {\\n        var data = {};\\n\\n        value = $.isArray(value) ? value : [value];\\n\\n        for (var idx = 0; idx \\u003c value.length; idx++) {\\n            data['values[' + idx + ']'] = value[idx];\\n        }\\n\\n        return data;\\n    }\\n\\u003c/script\\u003e\\n\",\"type\":\"function\"}},\"type\":\"object\"}}"`
	/*
	  The name of the control, which is submitted with the form data.
	  @see typeNamesForAutocomplete.go
	  Ex.: const NAMES_FOR_AUTOCOMPLETE_NAME
	*/
	Name string `htmlAttr:"name" jsonSchema_complex:"{\"type\":\"string\",\"description\":\"The name of the control, which is submitted with the form data.\\n\\nIf you need to use the default values for the form's auto-completion feature, press ctrl+space to see the full list of values.\",\"oneOf\":[{\"pattern\":\"^(?!^name$|^honorific-prefix$|^given-name$|^additional-name$|^family-name$|^honorific-suffix$|^nickname$|^email$|^username$|^new-password$|^current-password$|^organization-title$|^organization$|^street-address$|^address-line1$|^address-line2$|^address-line3$|^address-level4$|^address-level3$|^address-level2$|^country$|^country-name$|^postal-code$|^cc-name$|^cc-given-name$|^cc-additional-name$|^cc-family-name$|^cc-number$|^cc-exp$|^cc-exp-month$|^cc-exp-year$|^cc-csc$|^cc-type$|^transaction-currency$|^transaction-amount$|^language$|^bday$|^bday-day$|^bday-month$|^bday-year$|^sex$|^tel$|^tel-country-code$|^tel-national$|^tel-area-code$|^tel-local$|^tel-local-prefix$|^tel-local-suffix$|^tel-extension$|^url$|^photo$)[a-zA-Z0-9_]+([[0-9]*])*$\",\"description\":\"html tag name\"},{\"const\":\"name\",\"description\":\"Default value for form autocomplete:\\n\\nName\"},{\"const\":\"honorific-prefix\",\"description\":\"Default value for form autocomplete:\\n\\nPrefix or title (e.g. \\\"Mr.\\\", \\\"Ms.\\\", \\\"Dr.\\\", \\\"Mlle\\\").\"},{\"const\":\"given-name\",\"description\":\"Default value for form autocomplete:\\n\\nFirst name.\"},{\"const\":\"additional-name\",\"description\":\"Default value for form autocomplete:\\n\\nMiddle name.\"},{\"const\":\"family-name\",\"description\":\"Default value for form autocomplete:\\n\\nLast name.\"},{\"const\":\"honorific-suffix\",\"description\":\"Default value for form autocomplete:\\n\\nSuffix (e.g. \\\"Jr.\\\", \\\"B.Sc.\\\", \\\"MBASW\\\", \\\"II\\\").\"},{\"const\":\"nickname\",\"description\":\"Default value for form autocomplete:\\n\\nNickname\"},{\"const\":\"email\",\"description\":\"Default value for form autocomplete:\\n\\nE-mail\"},{\"const\":\"username\",\"description\":\"Default value for form autocomplete:\\n\\nUser name\"},{\"const\":\"new-password\",\"description\":\"Default value for form autocomplete:\\n\\nA new password (e.g. when creating an account or changing a password).\"},{\"const\":\"current-password\",\"description\":\"Default value for form autocomplete:\\n\\nCurrent password\"},{\"const\":\"organization-title\",\"description\":\"Default value for form autocomplete:\\n\\nOrganization title\"},{\"const\":\"organization\",\"description\":\"Default value for form autocomplete:\\n\\nOrganization\"},{\"const\":\"street-address\",\"description\":\"Default value for form autocomplete:\\n\\nStreet address\"},{\"const\":\"address-line1\",\"description\":\"Default value for form autocomplete:\\n\\nAddress line1\"},{\"const\":\"address-line2\",\"description\":\"Default value for form autocomplete:\\n\\nAddress line2\"},{\"const\":\"address-line3\",\"description\":\"Default value for form autocomplete:\\n\\nAddress line3\"},{\"const\":\"address-level4\",\"description\":\"Default value for form autocomplete:\\n\\nAddress level4\"},{\"const\":\"address-level3\",\"description\":\"Default value for form autocomplete:\\n\\nAddress level3\"},{\"const\":\"address-level2\",\"description\":\"Default value for form autocomplete:\\n\\nAddress level2\"},{\"const\":\"address-level1\",\"description\":\"Default value for form autocomplete:\\n\\nAddress level1\"},{\"const\":\"country\",\"description\":\"Default value for form autocomplete:\\n\\nCountry\"},{\"const\":\"country-name\",\"description\":\"Default value for form autocomplete:\\n\\nCountry name\"},{\"const\":\"postal-code\",\"description\":\"Default value for form autocomplete:\\n\\nPostal code\"},{\"const\":\"cc-name\",\"description\":\"Default value for form autocomplete:\\n\\nFull name as given on the payment instrument.\"},{\"const\":\"cc-given-name\",\"description\":\"Default value for form autocomplete:\\n\\nFirst name as given on the payment instrument.\"},{\"const\":\"cc-additional-name\",\"description\":\"Default value for form autocomplete:\\n\\nMiddle name as given on the payment instrument.\"},{\"const\":\"cc-family-name\",\"description\":\"Default value for form autocomplete:\\n\\nLast name as given on the payment instrument.\"},{\"const\":\"cc-number\",\"description\":\"Default value for form autocomplete:\\n\\nCode identifying the payment instrument (e.g. the credit card number).\"},{\"const\":\"cc-exp\",\"description\":\"Default value for form autocomplete:\\n\\nExpiration date of the payment instrument.\"},{\"const\":\"cc-exp-month\",\"description\":\"Default value for form autocomplete:\\n\\nExpiration month of the payment instrument.\"},{\"const\":\"cc-exp-year\",\"description\":\"Default value for form autocomplete:\\n\\nExpiration year of the payment instrument.\"},{\"const\":\"cc-csc\",\"description\":\"Default value for form autocomplete:\\n\\nSecurity code for the payment instrument.\"},{\"const\":\"cc-type\",\"description\":\"Default value for form autocomplete:\\n\\nType of payment instrument (e.g. Visa).\"},{\"const\":\"transaction-currency\",\"description\":\"Default value for form autocomplete:\\n\\nTransaction currency for the payment instrument.\"},{\"const\":\"transaction-amount\",\"description\":\"Default value for form autocomplete:\\n\\nTransaction amount for the payment instrument.\"},{\"const\":\"language\",\"description\":\"Default value for form autocomplete:\\n\\nPreferred language; a valid BCP 47 language tag.\"},{\"const\":\"bday\",\"description\":\"Default value for form autocomplete:\\n\\nBirthday\"},{\"const\":\"bday-day\",\"description\":\"Default value for form autocomplete:\\n\\nDay for birthday\"},{\"const\":\"bday-month\",\"description\":\"Default value for form autocomplete:\\n\\nMonth for birthday\"},{\"const\":\"bday-year\",\"description\":\"Default value for form autocomplete:\\n\\nYear for birthday\"},{\"const\":\"sex\",\"description\":\"Default value for form autocomplete:\\n\\nGender identity (e.g. Female, Fa'afafine), free-form text, no newlines.\"},{\"const\":\"tel\",\"description\":\"Default value for form autocomplete:\\n\\nFull telephone number, including country code\"},{\"const\":\"tel-country-code\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone country code\"},{\"const\":\"tel-national\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone national code\"},{\"const\":\"tel-area-code\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone area code\"},{\"const\":\"tel-local\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone local code\"},{\"const\":\"tel-local-prefix\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone prefix\"},{\"const\":\"tel-local-suffix\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone suffix\"},{\"const\":\"tel-extension\",\"description\":\"Default value for form autocomplete:\\n\\nTelephone extension\"},{\"const\":\"url\",\"description\":\"Default value for form autocomplete:\\n\\nHome page or other Web page corresponding to the company, person, address, or contact information in the other fields associated with this field.\"},{\"const\":\"photo\",\"description\":\"Default value for form autocomplete:\\n\\nPhotograph, icon, or other image corresponding to the company, person, address, or contact information in the other fields associated with this field.\"}]}"`
	//
	///*
	//  The initial value of the control. This attribute is optional except when the value of the type attribute is radio or
	//  checkbox.
	//  Note that when reloading the page, Gecko and IE will ignore the value specified in the HTML source, if the value was
	//  changed before the reload.
	//*/
	//Value string `htmlAttr:"value" jsonSchema_description:"The initial value of the control. This attribute is optional except when the value of the type attribute is radio or checkbox.\nNote that when reloading the page, Gecko and IE will ignore the value specified in the HTML source, if the value was changed before the reload."`
	//
	///*
	//  The form element that the input element is associated with (its form owner). The value of the attribute must be an id
	//  of a <form> element in the same document. If this attribute is not specified, this <input> element must be a
	//  descendant of a <form> element. This attribute enables you to place <input> elements anywhere within a document, not
	//  just as descendants of their form elements. An input can only be associated with one form.
	//*/
	//Form string `htmlAttr:"form" jsonSchema_description:"The form element that the input element is associated with (its form owner). The value of the attribute must be an id of a <form> element in the same document. If this attribute is not specified, this <input> element must be a descendant of a <form> element. This attribute enables you to place <input> elements anywhere within a document, not just as descendants of their form elements. An input can only be associated with one form."`
	//
	///*
	//  This Boolean attribute indicates that the form control is not available for interaction. In particular, the click
	//  event will not be dispatched on disabled controls. Also, a disabled control's value isn't submitted with the form.
	//  Unlike other browsers, Firefox will by default persist the dynamic disabled state of an <input> across page loads. Use
	//  the autocomplete attribute to control this feature.
	//*/
	//Disabled Boolean `htmlAttrSet:"disabled" jsonSchema_description:"This Boolean attribute indicates that the form control is not available for interaction. In particular, the click event will not be dispatched on disabled controls. Also, a disabled control's value isn't submitted with the form.\nUnlike other browsers, Firefox will by default persist the dynamic disabled state of an <input> across page loads. Use the autocomplete attribute to control this feature."`
	//
	///*
	//  This attribute indicates whether the value of the control can be automatically completed by the browser.
	//  Possible values are:
	//  off: The user must explicitly enter a value into this field for every use, or the document provides its own
	//  auto-completion method. The browser does not automatically complete the entry.
	//  on: The browser is allowed to automatically complete the value based on values that the user has entered during
	//  previous uses, however on does not provide any further information about what kind of data the user might be expected
	//  to enter.
	//  @see typeNamesForAutocomplete.go
	//*/
	//AutoComplete Boolean `htmlAttrOnOff:"autocomplete" jsonSchema_description:"This attribute indicates whether the value of the control can be automatically completed by the browser.\nPossible values are:\n off: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method. The browser does not automatically complete the entry.\non: The browser is allowed to automatically complete the value based on values that the user has entered during previous uses, however on does not provide any further information about what kind of data the user might be expected to enter."`
	//
	///*
	//  Identifies a list of pre-defined options to suggest to the user. The value must be the id of a <datalist> element in
	//  the same document. The browser displays only options that are valid values for this input element. This attribute is
	//  ignored when the type attribute's value is hidden, checkbox, radio, file, or a button type.
	//*/
	//List string `htmlAttr:"list" jsonSchema_description:"Identifies a list of pre-defined options to suggest to the user. The value must be the id of a <datalist> element in the same document. The browser displays only options that are valid values for this input element. This attribute is ignored when the type attribute's value is hidden, checkbox, radio, file, or a button type."`
	//
	///*
	//  If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the maximum
	//  number of characters (in UTF-16 code units) that the user can enter. For other control types, it is ignored. It can
	//  exceed the value of the size attribute. If it is not specified, the user can enter an unlimited number of characters.
	//  Specifying a negative number results in the default behavior (i.e. the user can enter an unlimited number of
	//  characters). The constraint is evaluated only when the value of the attribute has been changed.
	//*/
	//MaxLength int `htmlAttr:"maxlength" jsonSchema_description:"If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the maximum number of characters (in UTF-16 code units) that the user can enter. For other control types, it is ignored. It can exceed the value of the size attribute. If it is not specified, the user can enter an unlimited number of characters.\nSpecifying a negative number results in the default behavior (i.e. the user can enter an unlimited number of characters). The constraint is evaluated only when the value of the attribute has been changed."`
	//
	///*
	//  If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the minimum
	//  number of characters (in Unicode code points) that the user can enter. For other control types, it is ignored.
	//*/
	//MinLength int `htmlAttr:"minlength" jsonSchema_description:"If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the minimum number of characters (in Unicode code points) that the user can enter. For other control types, it is ignored."`
	//
	///*
	//  A regular expression that the control's value is checked against. The pattern must match the entire value, not just
	//  some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value
	//  of the type attribute is text, search, tel, url, email, or password, otherwise it is ignored. The regular expression
	//  language is the same as JavaScript RegExp algorithm, with the 'u' parameter that makes it treat the pattern as a
	//  sequence of unicode code points. The pattern is not surrounded by forward slashes.
	//*/
	//Pattern string `htmlAttr:"pattern" jsonSchema_description:"A regular expression that the control's value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is text, search, tel, url, email, or password, otherwise it is ignored. The regular expression language is the same as JavaScript RegExp algorithm, with the 'u' parameter that makes it treat the pattern as a sequence of unicode code points. The pattern is not surrounded by forward slashes."`
	//
	///*
	//  A hint to the user of what can be entered in the control . The placeholder text must not contain carriage returns or
	//  line-feeds.
	//*/
	//PlaceHolder string `htmlAttr:"placeholder" jsonSchema_description:"A hint to the user of what can be entered in the control . The placeholder text must not contain carriage returns or line-feeds."`
	//
	///*
	//  This attribute specifies that the user must fill in a value before submitting a form. It cannot be used when the type
	//  attribute is hidden, image, or a button type (submit, reset, or button). The :optional and :required CSS
	//  pseudo-classes will be applied to the field as appropriate.
	//*/
	//Required Boolean `htmlAttrSet:"required" jsonSchema_description:"This attribute specifies that the user must fill in a value before submitting a form. It cannot be used when the type attribute is hidden, image, or a button type (submit, reset, or button). The :optional and :required CSS pseudo-classes will be applied to the field as appropriate."`
	//
	///*
	//  This attribute indicates that the user cannot modify the value of the control. The value of the attribute is
	//  irrelevant. If you need read-write access to the input value, do not add the "readonly" attribute. It is ignored if
	//  the value of the type attribute is hidden, range, color, checkbox, radio, file, or a button type (such as button or
	//  submit).
	//*/
	//Readonly Boolean `htmlAttrSet:"readonly" jsonSchema_description:"This attribute indicates that the user cannot modify the value of the control. The value of the attribute is irrelevant. If you need read-write access to the input value, do not add the 'readonly' attribute. It is ignored if the value of the type attribute is hidden, range, color, checkbox, radio, file, or a button type (such as button or submit)."`
	//
	///*
	//  The initial size of the control. This value is in pixels unless the value of the type attribute is text or password,
	//  in which case it is an integer number of characters. Starting in HTML5, this attribute applies only when the type
	//  attribute is set to text, search, tel, url, email, or password, otherwise it is ignored. In addition, the size must be
	//  greater than zero. If you do not specify a size, a default value of 20 is used. HTML5 simply states "the user agent
	//  should ensure that at least that many characters are visible", but different characters can have different widths in
	//  certain fonts. In some browsers, a certain string with x characters will not be entirely visible even if size is
	//  defined to at least x.
	//*/
	//Size int `htmlAttr:"size" jsonSchema_description:"The initial size of the control. This value is in pixels unless the value of the type attribute is text or password, in which case it is an integer number of characters. Starting in HTML5, this attribute applies only when the type attribute is set to text, search, tel, url, email, or password, otherwise it is ignored. In addition, the size must be greater than zero. If you do not specify a size, a default value of 20 is used. HTML5 simply states 'the user agent should ensure that at least that many characters are visible', but different characters can have different widths in certain fonts. In some browsers, a certain string with x characters will not be entirely visible even if size is defined to at least x."`
	//
	//CheckCode string `htmlAttr:"checkcode" jsonSchema_description:""`
	//
	Global HtmlGlobalAttributes `htmlAttr:"-" jsonSchema_description:"" jsonSchema_keyNewName:"global"`

	*ToJavaScriptConverter `htmlAttr:"-" jsonSchema_description:"-"`
}

func (el *HtmlInputText) ToJSonSchema() []byte {
	var buffer bytes.Buffer

	element := reflect.ValueOf(el).Elem()
	data := el.ToJavaScriptConverter.ToSJsonSchema("HtmlInputText", "object", element)

	buffer.Write(data)

	return buffer.Bytes()
}
func (el *HtmlInputText) ToHtml() []byte {
	var buffer bytes.Buffer

	if el.Global.DoNotUseThisFieldOmitHtml == TRUE {
		return []byte{}
	}

	element := reflect.ValueOf(el).Elem()
	data := el.ToJavaScriptConverter.ToTelerikHtml(element)

	buffer.Write([]byte(`<input type="text"`))
	buffer.Write(el.Global.ToHtml())
	buffer.Write(data)
	buffer.Write([]byte(`>`))

	return buffer.Bytes()
}
func (el *HtmlInputText) GetId() []byte {
	if el.Global.Id == "" {
		el.Global.Id = GetAutoId()
	}
	return []byte(el.Global.Id)
}
func (el *HtmlInputText) GetName() []byte {
	if el.Name == "" {
		el.Name = GetAutoId()
	}
	return []byte(el.Name)
}
func (el *HtmlInputText) ToJavaScript() []byte {
	var ret bytes.Buffer
	if el.Global.Id == "" {
		el.Global.Id = GetAutoId()
	}

	ret.Write([]byte(`$("#` + el.Global.Id + `").addClass('k-textbox');`))
	ret.Write([]byte{0x0A})

	return ret.Bytes()
}
